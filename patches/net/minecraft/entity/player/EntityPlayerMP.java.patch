--- ../src-base/minecraft/net/minecraft/entity/player/EntityPlayerMP.java
+++ ../src-work/minecraft/net/minecraft/entity/player/EntityPlayerMP.java
@@ -1,5 +1,9 @@
 package net.minecraft.entity.player;
 
+import carpet.gui.CTECInventoryPlayer;
+import carpet.logging.LoggerRegistry;
+import carpet.patches.EntityPlayerMPFake;
+import carpet.utils.Messenger;
 import com.google.common.collect.Lists;
 import com.mojang.authlib.GameProfile;
 import io.netty.buffer.Unpooled;
@@ -21,6 +25,7 @@
 import net.minecraft.entity.EntityList;
 import net.minecraft.entity.EntityLivingBase;
 import net.minecraft.entity.IMerchant;
+import net.minecraft.entity.monster.EntityCreeper;
 import net.minecraft.entity.passive.AbstractHorse;
 import net.minecraft.entity.projectile.EntityArrow;
 import net.minecraft.init.Items;
@@ -38,35 +43,14 @@
 import net.minecraft.item.ItemStack;
 import net.minecraft.item.crafting.CraftingManager;
 import net.minecraft.item.crafting.IRecipe;
+import net.minecraft.nbt.JsonToNBT;
+import net.minecraft.nbt.NBTException;
 import net.minecraft.nbt.NBTTagCompound;
 import net.minecraft.network.NetHandlerPlayServer;
 import net.minecraft.network.Packet;
 import net.minecraft.network.PacketBuffer;
 import net.minecraft.network.play.client.CPacketClientSettings;
-import net.minecraft.network.play.server.SPacketAnimation;
-import net.minecraft.network.play.server.SPacketCamera;
-import net.minecraft.network.play.server.SPacketChangeGameState;
-import net.minecraft.network.play.server.SPacketChat;
-import net.minecraft.network.play.server.SPacketCloseWindow;
-import net.minecraft.network.play.server.SPacketCombatEvent;
-import net.minecraft.network.play.server.SPacketCustomPayload;
-import net.minecraft.network.play.server.SPacketDestroyEntities;
-import net.minecraft.network.play.server.SPacketEffect;
-import net.minecraft.network.play.server.SPacketEntityEffect;
-import net.minecraft.network.play.server.SPacketEntityStatus;
-import net.minecraft.network.play.server.SPacketOpenWindow;
-import net.minecraft.network.play.server.SPacketPlayerAbilities;
-import net.minecraft.network.play.server.SPacketRemoveEntityEffect;
-import net.minecraft.network.play.server.SPacketResourcePackSend;
-import net.minecraft.network.play.server.SPacketSetExperience;
-import net.minecraft.network.play.server.SPacketSetSlot;
-import net.minecraft.network.play.server.SPacketSignEditorOpen;
-import net.minecraft.network.play.server.SPacketSoundEffect;
-import net.minecraft.network.play.server.SPacketUpdateHealth;
-import net.minecraft.network.play.server.SPacketUpdateTileEntity;
-import net.minecraft.network.play.server.SPacketUseBed;
-import net.minecraft.network.play.server.SPacketWindowItems;
-import net.minecraft.network.play.server.SPacketWindowProperty;
+import net.minecraft.network.play.server.*;
 import net.minecraft.potion.PotionEffect;
 import net.minecraft.scoreboard.IScoreCriteria;
 import net.minecraft.scoreboard.Score;
@@ -83,16 +67,7 @@
 import net.minecraft.tileentity.TileEntity;
 import net.minecraft.tileentity.TileEntityCommandBlock;
 import net.minecraft.tileentity.TileEntitySign;
-import net.minecraft.util.CooldownTracker;
-import net.minecraft.util.CooldownTrackerServer;
-import net.minecraft.util.DamageSource;
-import net.minecraft.util.EntityDamageSource;
-import net.minecraft.util.EnumHand;
-import net.minecraft.util.EnumHandSide;
-import net.minecraft.util.NonNullList;
-import net.minecraft.util.ReportedException;
-import net.minecraft.util.ResourceLocation;
-import net.minecraft.util.SoundCategory;
+import net.minecraft.util.*;
 import net.minecraft.util.datafix.DataFixer;
 import net.minecraft.util.datafix.FixTypes;
 import net.minecraft.util.datafix.IDataFixer;
@@ -114,6 +89,15 @@
 import org.apache.logging.log4j.LogManager;
 import org.apache.logging.log4j.Logger;
 
+import net.minecraft.entity.item.EntityMinecart;
+import net.minecraft.entity.passive.EntityLlama;
+
+import carpet.CarpetSettings;
+import carpet.helpers.EntityPlayerActionPack;
+import carpet.helpers.StatSubItem;
+import carpet.helpers.IPlayerSensitiveTileEntity;
+import carpet.logging.logHelpers.DamageReporter;
+
 public class EntityPlayerMP extends EntityPlayer implements IContainerListener
 {
     private static final Logger field_147102_bM = LogManager.getLogger();
@@ -153,6 +137,13 @@
     public int field_71138_i;
     public boolean field_71136_j;
 
+    //CM
+    public EntityPlayerActionPack actionPack;
+    private final CTECInventoryPlayer ctecInventoryPlayer;
+
+    // [CM] PistonClippingFix -- Counter
+    public int pistonClippingCounter;
+
     public EntityPlayerMP(MinecraftServer p_i45285_1_, WorldServer p_i45285_2_, GameProfile p_i45285_3_, PlayerInteractionManager p_i45285_4_)
     {
         super(p_i45285_2_, p_i45285_3_);
@@ -188,8 +179,28 @@
         {
             this.func_70107_b(this.field_70165_t, this.field_70163_u + 1.0D, this.field_70161_v);
         }
+
+        //CM
+        actionPack = new EntityPlayerActionPack(this);
+        ctecInventoryPlayer = new CTECInventoryPlayer(this);
     }
 
+    //CM
+    public CTECInventoryPlayer getCTECInventoryPlayer() {
+        return ctecInventoryPlayer;
+    }
+
+    // CM
+    @Override
+    public EnumActionResult func_190775_a(Entity entityToInteractOn, EnumHand hand) {
+        if (entityToInteractOn instanceof EntityPlayerMPFake && CarpetSettings.openFakePlayerInventory) {
+            this.func_71007_a(((EntityPlayerMPFake) entityToInteractOn).getCTECInventoryPlayer());
+            return EnumActionResult.SUCCESS;
+        }
+
+        return super.func_190775_a(entityToInteractOn, hand);
+    }
+
     public void func_70037_a(NBTTagCompound p_70037_1_)
     {
         super.func_70037_a(p_70037_1_);
@@ -313,6 +324,10 @@
 
     public void func_70071_h_()
     {
+        //CM
+        actionPack.onUpdate();
+        ctecInventoryPlayer.func_73660_a();
+        //CM end
         this.field_71134_c.func_73075_a();
         --this.field_147101_bU;
 
@@ -365,6 +380,13 @@
             }
         }
 
+        if (CarpetSettings.ridingPlayerUpdateFix) {
+            Entity riding = func_184208_bv();
+            if(riding != null && (riding instanceof EntityMinecart || riding instanceof EntityLlama)){
+                this.field_71133_b.func_184103_al().func_72358_d(this);
+            }
+        }
+
         CriteriaTriggers.field_193135_v.func_193182_a(this);
 
         if (this.field_193107_ct != null)
@@ -373,6 +395,9 @@
         }
 
         this.field_192042_bX.func_192741_b(this);
+
+        // Clears the dupe item for the duping bug CARPET-XCOM
+        clearDupeItem();
     }
 
     public void func_71127_g()
@@ -503,6 +528,34 @@
             this.field_71071_by.func_70436_m();
         }
 
+        // Allows players to drop there skulls when blown up by charged creeper CARPET-XCOM
+        if (CarpetSettings.playerSkullsByChargedCreeper)
+        {
+            Entity entity = p_70645_1_.func_76346_g();
+
+            if (entity instanceof EntityCreeper)
+            {
+                EntityCreeper entitycreeper = (EntityCreeper) entity;
+
+                if (entitycreeper.func_70830_n() && entitycreeper.func_70650_aV())
+                {
+                    entitycreeper.func_175493_co();
+
+                    try
+                    {
+                        ItemStack playerskull = new ItemStack(Items.field_151144_bL, 1, 3);
+                        playerskull.func_77982_d(JsonToNBT.func_180713_a(String.format("{SkullOwner:\"%s\"}", func_70005_c_().toLowerCase())));
+                        this.func_70099_a(playerskull, 0.0F);
+                    }
+                    catch (NBTException e)
+                    {
+                        e.printStackTrace();
+                    }
+                }
+            }
+        }
+        // CM
+
         for (ScoreObjective scoreobjective : this.field_70170_p.func_96441_U().func_96520_a(IScoreCriteria.field_96642_c))
         {
             Score score = this.func_96123_co().func_96529_a(this.func_70005_c_(), scoreobjective);
@@ -605,6 +658,7 @@
 
             if (!flag && this.field_147101_bU > 0 && p_70097_1_ != DamageSource.field_76380_i)
             {
+                DamageReporter.modify_damage(this, p_70097_1_, p_70097_2_, 0.0F, "respawn protection");
                 return false;
             }
             else
@@ -615,6 +669,7 @@
 
                     if (entity instanceof EntityPlayer && !this.func_96122_a((EntityPlayer)entity))
                     {
+                        DamageReporter.modify_damage(this, p_70097_1_, p_70097_2_, 0.0F, "PVP disabled");
                         return false;
                     }
 
@@ -624,6 +679,7 @@
 
                         if (entityarrow.field_70250_c instanceof EntityPlayer && !this.func_96122_a((EntityPlayer)entityarrow.field_70250_c))
                         {
+                            DamageReporter.modify_damage(this, p_70097_1_, p_70097_2_, 0.0F, "PVP disabled");
                             return false;
                         }
                     }
@@ -704,6 +760,8 @@
         if (p_147097_1_ != null)
         {
             SPacketUpdateTileEntity spacketupdatetileentity = p_147097_1_.func_189518_D_();
+            if (p_147097_1_ instanceof IPlayerSensitiveTileEntity)
+                spacketupdatetileentity = ((IPlayerSensitiveTileEntity) p_147097_1_).getUpdatePacketPlayerSensitive(this);
 
             if (spacketupdatetileentity != null)
             {
@@ -1027,6 +1085,8 @@
 
     public void func_71064_a(StatBase p_71064_1_, int p_71064_2_)
     {
+        if(!CarpetSettings.fakePlayerStats && this instanceof EntityPlayerMPFake) return;
+
         if (p_71064_1_ != null)
         {
             this.field_147103_bO.func_150871_b(this, p_71064_1_, p_71064_2_);
@@ -1035,6 +1095,10 @@
             {
                 this.func_96123_co().func_96529_a(this.func_70005_c_(), scoreobjective).func_96649_a(p_71064_2_);
             }
+
+            // CM
+            if (p_71064_1_ instanceof StatSubItem) func_71064_a(((StatSubItem) p_71064_1_).getBase(), p_71064_2_);
+            // CM END
         }
     }
 
@@ -1169,7 +1233,7 @@
 
     protected void func_70688_c(PotionEffect p_70688_1_)
     {
-        super.func_70688_c(p_70688_1_);
+        if (!CarpetSettings.effectsFix) super.func_70688_c(p_70688_1_);
         this.field_71135_a.func_147359_a(new SPacketRemoveEntityEffect(this.func_145782_y(), p_70688_1_.func_188419_a()));
 
         if (p_70688_1_.func_188419_a() == MobEffects.field_188424_y)
@@ -1178,6 +1242,7 @@
         }
 
         CriteriaTriggers.field_193139_z.func_193153_a(this);
+        if (CarpetSettings.effectsFix) super.func_70688_c(p_70688_1_);
     }
 
     public void func_70634_a(double p_70634_1_, double p_70634_3_, double p_70634_5_)
@@ -1216,11 +1281,13 @@
 
         if (p_71033_1_ == GameType.SPECTATOR)
         {
+            if(CarpetSettings.spectatorsDontLoadChunks) ((WorldServer)field_70170_p).func_184164_w().func_72695_c(this);
             this.func_192030_dh();
             this.func_184210_p();
         }
         else
         {
+            if(CarpetSettings.spectatorsDontLoadChunks) ((WorldServer)field_70170_p).func_184164_w().func_72683_a(this);
             this.func_175399_e(this);
         }
 
@@ -1233,6 +1300,11 @@
         return this.field_71134_c.func_73081_b() == GameType.SPECTATOR;
     }
 
+    public boolean isSurvival()
+    {
+        return this.field_71134_c.func_73081_b() == GameType.SURVIVAL;
+    }
+
     public boolean func_184812_l_()
     {
         return this.field_71134_c.func_73081_b() == GameType.CREATIVE;
@@ -1439,4 +1511,22 @@
     {
         return this.field_193110_cw;
     }
+
+    // Adding this dupe feature to make it compatible with carpet 12.0 as per community request. CARPET-XCOM
+    private int dupe;
+    private boolean scanForDuping;
+    public void clearDupeItem() {
+        dupe = Integer.MIN_VALUE;
+    }
+    public void dupeItem(int slot) {
+        if(scanForDuping){
+            dupe = slot;
+        }
+    }
+    public int getDupeItem() {
+        return dupe;
+    }
+    public void dupeItemScan(boolean s){
+        scanForDuping = s;
+    }
 }
